<?php

include_once('dpldev_theme.features.inc');

/**
* Implementation of hook_init().
*
*/
function dpldev_theme_init() {
  drupal_add_css(drupal_get_path('module', 'dpldev_theme') . '/css/style.css');
 // drupal_add_js(drupal_get_path('module', 'dpldev_theme') . '/js/dpldev_theme.js');
}

/**
 * Implementation of hook_form_alter().
 */
function dpldev_theme_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['type']['#value']) && $form['type']['#value'] .'_node_form' == $form_id) {
    if (isset($form['buttons']['submit']['#value'])) {
      $form['buttons']['submit']['#value'] = t('Cập nhập', array(), 'vi');
    }
    if (isset($form['buttons']['preview'])) {
      unset($form['buttons']['preview']);
    }
  }
  
  if ($form['#method'] && strtolower($form['#method']) == 'get') {
    $form['#theme'][] = 'form_special_key_remove';
  }
}

/**
* Unset the N/A option on option widget radio buttons.
*/
function dpldev_theme_remove_radio_na($element) {
  //unset($element['value']['#options']['']);
  return $element;
}

/**
* Implementation of hook_elements().
*
* This extends optionwidgets_elements() to add in additional processing.
* Note that your module must be weighted higher than optionwidgets
* for this code to take effect.
*/
function dpldev_theme_elements() {
  $type['optionwidgets_select']['#process'][] = 'dpldev_theme_remove_radio_na';
  $type['optionwidgets_buttons']['#process'][] = 'dpldev_theme_remove_radio_na';
  return $type;
}

/**
 * Format a clearfix form field.
 *
 * @param $item
 * @return
 *   A themed HTML string representing the clearfix.
 *
 * @ingroup themeable
 */
function theme_clearfix($item) {
  $output = '<div class="clearfix clear">' . $item . '</div>';
  return $output;
}

/**
 * Present a node submission form.
 *
 * @ingroup themeable
 */
function theme_khachhang_node_form($form) {
  switch (arg(2)) {
    case 'clone':
      $title = t('Nhập contact trùng', array(), 'vi');
      break;
    case 'edit':
      $title =  t('Sửa thông tin khách hàng', array(), 'vi');
      break;
    default:
      $title = t('Tạo khách hàng mới', array(), 'vi');
      break;
  }

  drupal_set_title($title);

  $output = "\n<div class=\"node-form\">\n";
  // Admin form fields and submit buttons must be rendered first, because
  // they need to go to the bottom of the form, and so should not be part of
  // the catch-all call to drupal_render().
  $admin = '';
  if (isset($form['author'])) {
    $admin .= "    <div class=\"authored\">\n";
    $admin .= drupal_render($form['author']);
    $admin .= "    </div>\n";
  }
  if (isset($form['options'])) {
    $admin .= "    <div class=\"options\">\n";
    $admin .= drupal_render($form['options']);
    $admin .= "    </div>\n";
  }
  
  //Khong cho hien thi mot so items  
  $revision = drupal_render($form['revision_information']);
  $menu = drupal_render($form['menu']);
  $buttons = drupal_render($form['buttons']);
  
  //Thong tin lien he
  $left_content = '';
  $left_content .= theme('clearfix', '<div class="one-half">' . drupal_render($form['field_hovaten']) . '</div><div class="one-half last"><label for="edit-field-khachhang-buon-0-value">&nbsp;</label>' . drupal_render($form['field_khachhang_buon']) . '</div>');
  $left_content .= theme('clearfix', '<div class="one-half">' . drupal_render($form['field_hovadem']) . '</div><div class="one-half last">' . drupal_render($form['field_ten']) . '</div>');
  $left_content .= theme('clearfix', '<div class="one-half">' . drupal_render($form['field_gioitinh']) . '</div>');
  $left_content .= theme('clearfix', drupal_render($form['field_mobile']));
  $left_content .= theme('clearfix', drupal_render($form['field_phone']));
  
  $right_content = '';
  $right_content .= theme('clearfix', drupal_render($form['field_makh']));
  $right_content .= theme('clearfix', drupal_render($form['field_quan_ly']));
  $right_content .= theme('clearfix', drupal_render($form['field_email']));
  $right_content .= theme('clearfix', drupal_render($form['field_chucdanh']));
  $right_content .= theme('clearfix', drupal_render($form['field_congty']));
  
  $form_content = theme('clearfix', '<h2 class="fieldset">' . t('Thông tin liên hệ:', array(), 'vi'). '</h2>');
  $form_content .= '<div class="row"><div class="one-half">' . $left_content . '</div>';
  $form_content .= '<div class="one-half last">' . $right_content . '</div>';
  $form_content = theme('clearfix', $form_content);
  $form_content .= '</div>';
  
  //Dia chi
  if (isset($form['field_diachi_tinhthanhpho']['value']['#type'])) {
    $form['field_diachi_tinhthanhpho']['value']['#attributes']['class'] .= ' location_dropdown_province';
  }
  if (isset($form['field_diachi_khac_tinhthanhpho']['value']['#type'])) {
    $form['field_diachi_khac_tinhthanhpho']['value']['#attributes']['class'] .= ' location_dropdown_province';
  }
  if (isset($form['field_diachi_quocgia']['value']['#type'])) {
    $form['field_diachi_quocgia']['value']['#attributes']['class'] .= ' location_auto_country';
  }
  if (isset($form['field_diachi_khac_quocgia']['value']['#type'])) {
    $form['field_diachi_khac_quocgia']['value']['#attributes']['class'] .= ' location_auto_country';
  }
      
  $left_content = '';
  $left_content .= theme('clearfix', drupal_render($form['field_diachi']));  
  $left_content .= theme('clearfix', drupal_render($form['field_diachi_quanhuyen']));
  $left_content .= theme('clearfix', '<div class="one-half">' . drupal_render($form['field_diachi_tinhthanhpho']) . '</div><div class="one-half last">' . drupal_render($form['field_diachi_quocgia']) . '</div>');
  $left_content = '<fieldset class="non-border">' . $left_content . '</fieldset>';
  
  $right_content = '';
  $right_content .= theme('clearfix', drupal_render($form['field_diachi_khac']));
  $right_content .= theme('clearfix', drupal_render($form['field_diachi_khac_quanhuyen']));
  $right_content .= theme('clearfix', '<div class="one-half">' . drupal_render($form['field_diachi_khac_tinhthanhpho']) . '</div><div class="one-half last">' . drupal_render($form['field_diachi_khac_quocgia']) . '</div>');
  $right_content = '<fieldset class="non-border">' . $right_content . '</fieldset>';

  $form_content .= theme('clearfix', '<h2 class="fieldset">' . t('Địa chỉ:', array(), 'vi') . '</h2>');
  $form_content .= theme('clearfix', '<div class="row"><div class="one-half">' . $left_content . '</div><div class="one-half last">' . $right_content . '</div></div>');

  //Thông tin hạng thẻ
  $left_content = '';
  $left_content .= theme('clearfix', drupal_render($form['field_person']));
  $left_content .= theme('clearfix', '<div class="one-half">' . drupal_render($form['field_tapkh']) . '</div>');
  $left_content .= theme('clearfix', drupal_render($form['field_sothe']));

  $right_content = '';
  // $right_content .= theme('clearfix', '<label class="normal">&nbsp;</label>');
  $right_content .= theme('clearfix', '<div class="one-half">' . drupal_render($form['field_mathe']) . '</div><div class="one-half last">' . drupal_render($form['field_tapkhachhang']) . '</div>');
  $right_content .= theme('clearfix', '<div class="one-half">' . drupal_render($form['field_ngaycap']) . '</div><div class="one-half last">' . drupal_render($form['field_thoihan']) . '</div>');
  $right_content .= theme('clearfix', '<div class="one-half">' . drupal_render($form['field_hangthe']) . '</div><div class="one-half last">' . drupal_render($form['field_macodinh']) . '</div>');

  $form_content .= theme('clearfix', '<h2 class="fieldset">' . t('Thông tin hạng thẻ:', array(), 'vi') . '</h2>');
  $form_content .= theme('clearfix', '<div class="row"><div class="one-half">' . $left_content . '</div><div class="one-half last">' . $right_content . '</div></div>');
  //Thong tin chi tiet
  $left_content = '';
  $left_content .= theme('clearfix', drupal_render($form['field_anhdaidien']));
  $left_content .= theme('clearfix', '<div class="inline-form-radios">' . drupal_render($form['field_thunhap']) . '</div>');
  $left_content .= theme('clearfix', drupal_render($form['field_sothich']));
  
  $right_content = '';
  $right_content .= theme('clearfix', '<label class="normal">&nbsp;</label>');
  $right_content .= theme('clearfix', '<div class="one-half">' . drupal_render($form['field_ngaysinh']) . '</div><div class="one-half last">' . drupal_render($form['field_ngaycuoi']) . '</div>');
  $right_content .= theme('clearfix', '<div class="one-half">' . drupal_render($form['field_ngaytotnghiep']) . '</div><div class="one-half last"></div>');
  $right_content .= theme('clearfix', '<div class="one-half">' . drupal_render($form['field_hocvan']) . '</div><div class="one-half last"><div class="inline-form-radios">' . drupal_render($form['field_honnhan']) . '</div></div>');
  $right_content .= theme('clearfix', '<div class="one-half">' . drupal_render($form['field_facebook']) . '</div><div class="one-half last">' . drupal_render($form['field_google']) . '</div>');
  $right_content .= theme('clearfix', '<div class="one-half">' . drupal_render($form['field_twitter']) . '</div><div class="one-half last">' . drupal_render($form['field_yahoo']) . '</div>');
      
  $form_content .= theme('clearfix', '<h2 class="fieldset">' . t('Thông tin chi tiết:', array(), 'vi') . '</h2>');
  $form_content .= theme('clearfix', '<div class="row"><div class="one-half">' . $left_content . '</div><div class="one-half last">' . $right_content . '</div></div>');

  //Ghi chu
  $form_content .= theme('clearfix', '<h2 class="fieldset">' . t('Ghi chú:', array(), 'vi') . '</h2>');
  $form_content .= theme('clearfix', '<div class="row no-resizable">' . drupal_render($form['field_ghichu']) . '</div>');
  
  //Form Hide
  $form_hide = drupal_render($form);
  
  // Everything else gets rendered here, and is displayed before the admin form
  // field and the submit buttons.
  $output .= "  <div class=\"standard\">\n";
  $output .= $form_content;
  $output .= "  </div>\n";

  if (!empty($admin)) {
    //$output .= "  <div class=\"admin\">\n";
    //$output .= $admin;
    //$output .= "  </div>\n";
  }

  $output .= theme('clearfix', '<div class="row">' . $buttons . '</div>');
  $output .= '<div class="hide">' . $menu . $revision . $admin . $form_hide . '</div>';
  $output .= "</div>\n";
  return $output;
}

/**
 * Present a node submission form.
 *
 * @ingroup themeable
 */
function theme_sanpham_node_form($form) {
  $output = "\n<div class=\"node-form sanpham-node-form\">\n";
  // Admin form fields and submit buttons must be rendered first, because
  // they need to go to the bottom of the form, and so should not be part of
  // the catch-all call to drupal_render().
  $admin = '';
  if (isset($form['author'])) {
    $admin .= "    <div class=\"authored\">\n";
    $admin .= drupal_render($form['author']);
    $admin .= "    </div>\n";
  }
  if (isset($form['options'])) {
    $admin .= "    <div class=\"options\">\n";
    $admin .= drupal_render($form['options']);
    $admin .= "    </div>\n";
  }
  
  //Khong cho hien thi mot so items  
  $revision = drupal_render($form['revision_information']);
  $menu = drupal_render($form['menu']);
  $buttons = drupal_render($form['buttons']);
  
  //Thong tin san pham
  $form_content = theme('clearfix', '<div class="row"><div class="one-fifth">' . $form['field_masanpham']['#title'] . '</div><div class="four-fifth last">' . drupal_render($form['field_masanpham']) . '</div></div>');
  $form_content .= theme('clearfix', '<div class="row"><div class="one-fifth">' . $form['taxonomy'][1]['#title'] . '</div><div class="four-fifth last">' . drupal_render($form['taxonomy']) . '</div></div>');
  $form_content .= theme('clearfix', '<div class="row"><div class="one-fifth">' . $form['field_tensanpham']['#title'] . '</div><div class="four-fifth last">' . drupal_render($form['field_tensanpham']) . '</div></div>');
    
  //Form Hide
  $form_hide = drupal_render($form);
  
  // Everything else gets rendered here, and is displayed before the admin form
  // field and the submit buttons.
  $output .= "  <div class=\"standard\">\n";
  $output .= $form_content;
  $output .= "  </div>\n";

  $output .= theme('clearfix', '<div class="row">' . $buttons . '</div>');
  $output .= '<div class="hide">' . $menu . $revision . $admin . $form_hide . '</div>';
  $output .= "</div>\n";
  return $output;
}

/**
 * Present a node submission form.
 *
 * @ingroup themeable
 */
function theme_donhang_node_form($form) {
  $output = "\n<div class=\"node-form donhang-node-form\">\n";
  // Admin form fields and submit buttons must be rendered first, because
  // they need to go to the bottom of the form, and so should not be part of
  // the catch-all call to drupal_render().
  $admin = '';
  if (isset($form['author'])) {
    $admin .= "    <div class=\"authored\">\n";
    $admin .= drupal_render($form['author']);
    $admin .= "    </div>\n";
  }
  if (isset($form['options'])) {
    $admin .= "    <div class=\"options\">\n";
    $admin .= drupal_render($form['options']);
    $admin .= "    </div>\n";
  }

  $revision = drupal_render($form['revision_information']);
  $menu = drupal_render($form['menu']);
  $buttons = drupal_render($form['buttons']);
  $form_content .= theme('clearfix', '<div class="row">' . drupal_render($form['field_donhang_khachhang_code']) . '</div>');
  $form_content .= theme('clearfix', '<div class="row">' . drupal_render($form['field_sohoadon']) . '</div>');
  $form_content .= theme('clearfix', '<div class="row">' . drupal_render($form['field_masanpham']) . '</div>');
  $form_content .= theme('clearfix', '<div class="row">' . drupal_render($form['field_loaisanpham']) . '</div>');
  $form_content .= theme('clearfix', '<div class="row">' . drupal_render($form['field_thuonghieu']) . '</div>');
  $form_content .= theme('clearfix', '<div class="row">' . drupal_render($form['field_tensanpham']) . '</div>');
  $form_content .= theme('clearfix', '<div class="row">' . drupal_render($form['field_donvi']) . '</div>');
  $form_content .= theme('clearfix', '<div class="row">' . drupal_render($form['field_soluong']) . '</div>');
  $form_content .= theme('clearfix', '<div class="row">' . drupal_render($form['field_ngayban']) . '</div>');
  $form_content .= theme('clearfix', '<div class="row">' . drupal_render($form['field_giaban']) . '</div>');
  $form_content .= theme('clearfix', '<div class="row">' . drupal_render($form['field_giamgia']) . '</div>');
  $form_content .= theme('clearfix', '<div class="row">' . drupal_render($form['field_manv']) . '</div>');
  $form_content .= theme('clearfix', '<div class="row">' . drupal_render($form['field_nhanvien']) . '</div>');
  $form_content .= theme('clearfix', '<div class="row">' . drupal_render($form['field_cuahang']) . '</div>');
    
  //Form Hide
  $form_hide = drupal_render($form);

  // Everything else gets rendered here, and is displayed before the admin form
  // field and the submit buttons.
  $output .= "  <div class=\"standard\">\n";
  $output .= $form_content;
  $output .= "  </div>\n";

  $output .= theme('clearfix', '<div class="row">' . $admin . '</div>');
  $output .= theme('clearfix', '<div class="row">' . $buttons . '</div>');
  $output .= '<div class="hide">' . $menu . $revision  . $form_hide . '</div>';
  $output .= "</div>\n";
  return $output;
}

/**
 * Present a node submission form.
 *
 * @ingroup themeable
 */
function theme_import_from_excel_node_form($form) {
  drupal_set_title(t('Cập nhập dữ liệu khách hàng từ Excel', array(), 'vi'));
  $output = "\n<div class=\"node-form donhang-node-form\">\n";
  // Admin form fields and submit buttons must be rendered first, because
  // they need to go to the bottom of the form, and so should not be part of
  // the catch-all call to drupal_render().
  $admin = '';
  if (isset($form['author'])) {
    $admin .= "    <div class=\"authored\">\n";
    $admin .= drupal_render($form['author']);
    $admin .= "    </div>\n";
  }
  if (isset($form['options'])) {
    $admin .= "    <div class=\"options\">\n";
    $admin .= drupal_render($form['options']);
    $admin .= "    </div>\n";
  }

  $revision = drupal_render($form['revision_information']);
  $menu = drupal_render($form['menu']);
  drupal_render($form['buttons']['preview']);
  $buttons = drupal_render($form['buttons']);
  $form_content .= theme('clearfix', drupal_render($form['field_upload_file']));
    
  //Form Hide
  $form_hide = drupal_render($form);

  // Everything else gets rendered here, and is displayed before the admin form
  // field and the submit buttons.
  $output .= "  <div class=\"standard\">\n";
  $output .= $form_content;
  $output .= "  </div>\n";

  $output .= theme('clearfix', $buttons);
  $output .= '<div class="hide">' . $menu . $revision . $admin . $form_hide . '</div>';
  $output .= "</div>\n";
  $output = '<div class="row">' . $output . '</div>';
  return $output;
}

/**
 * Present a node submission form.
 *
 * @ingroup themeable
 */
function theme_cuahang_node_form($form) {
  $output = "\n<div class=\"node-form\">\n";
  // Admin form fields and submit buttons must be rendered first, because
  // they need to go to the bottom of the form, and so should not be part of
  // the catch-all call to drupal_render().
  $admin = '';
  if (isset($form['author'])) {
    $admin .= "    <div class=\"authored\">\n";
    $admin .= drupal_render($form['author']);
    $admin .= "    </div>\n";
  }
  if (isset($form['options'])) {
    $admin .= "    <div class=\"options\">\n";
    $admin .= drupal_render($form['options']);
    $admin .= "    </div>\n";
  }
  
  //Khong cho hien thi mot so items  
  $revision = drupal_render($form['revision_information']);
  $menu = drupal_render($form['menu']);
  $buttons = drupal_render($form['buttons']);
  
  //Render
  $form_content = theme('clearfix', drupal_render($form['title']));
  $form_content .= theme('clearfix', drupal_render($form['field_cuahang_phone']));
  $form_content .= theme('clearfix', drupal_render($form['field_cuahang_diachi']));
  $form_content .= theme('clearfix', drupal_render($form['field_cuahang_quanhuyen']));
  $form_content .= theme('clearfix', drupal_render($form['field_cuahang_tinhthanhpho']));
  $form_content = '<div class="row">' . $form_content . '</div>';
  //Form Hide
  $form_hide = drupal_render($form);
  
  // Everything else gets rendered here, and is displayed before the admin form
  // field and the submit buttons.
  $output .= "  <div class=\"standard\">\n";
  $output .= $form_content;
  $output .= "  </div>\n";

  if (!empty($admin)) {
    //$output .= "  <div class=\"admin\">\n";
    //$output .= $admin;
    //$output .= "  </div>\n";
  }

  $output .= theme('clearfix', '<div class="row">' . $buttons . '</div>');
  $output .= '<div class="hide">' . $menu . $revision . $admin . $form_hide . '</div>';
  $output .= "</div>\n";
  return $output;
}

/**
 * Format a textfield.
 *
 * @param $element
 *   An associative array containing the properties of the element.
 *   Properties used:  title, value, description, size, maxlength, required, attributes autocomplete_path
 * @return
 *   A themed HTML string representing the textfield.
 *
 * @ingroup themeable
 */
function phptemplate_textfield($element) {
  $size = empty($element['#size']) ? '' : ' size="'. $element['#size'] .'"';
  $maxlength = empty($element['#maxlength']) ? '' : ' maxlength="'. $element['#maxlength'] .'"';
  $class = array('form-text');
  $extra = '';
  $output = '';

  if ($element['#autocomplete_path'] && menu_valid_path(array('link_path' => $element['#autocomplete_path']))) {
    drupal_add_js(drupal_get_path('module', 'dpldev_theme') . '/js/autocomplete.js');
    $class[] = 'form-autocomplete';
    $extra =  '<input class="autocomplete" type="hidden" id="'. $element['#id'] .'-autocomplete" value="'. check_url(url($element['#autocomplete_path'], array('absolute' => TRUE))) .'" disabled="disabled" />';
  }
  _form_set_class($element, $class);

  if (isset($element['#field_prefix'])) {
    $output .= '<span class="field-prefix">'. $element['#field_prefix'] .'</span> ';
  }

  $output .= '<input type="text"'. $maxlength .' name="'. $element['#name'] .'" id="'. $element['#id'] .'"'. $size .' value="'. check_plain($element['#value']) .'"'. drupal_attributes($element['#attributes']) .' />';

  if (isset($element['#field_suffix'])) {
    $output .= ' <span class="field-suffix">'. $element['#field_suffix'] .'</span>';
  }

  return theme('form_element', $element, $output) . $extra;
}

/**
 * Implementation of hook_theme().
 */
function dpldev_theme_theme() {
  return array(
    'cuahang_node_form' => array('arguments' => array('form' => NULL)),
    'khachhang_node_form' => array('arguments' => array('form' => NULL)),
    'sanpham_node_form' => array('arguments' => array('form' => NULL)),
    'donhang_node_form' => array('arguments' => array('form' => NULL)),
    'import_from_excel_node_form' => array('arguments' => array('form' => NULL)),
    'clearfix' => array('arguments' => array('item' => NULL)),
    'form_special_key_remove' => array('arguments' => array('form' => NULL)),
    //setting
    'khohang_setting' => array('arguments' => array('form' => NULL)),
  );
}

/**
 * Intercept page template variables
 *
 * @param $vars
 *   A sequential array of variables passed to the theme function.
 */
function dpldev_theme_preprocess_page(&$vars) {
  if (arg(0) == 'khachhang' && is_numeric(arg(1))) {
    $vars['body_classes'] .= ' page-khachhang-' . arg(2);
  }
}

function theme_form_special_key_remove($form) {
  if (isset($form['op'])) {
    unset($form['op']);
  }
  if (isset($form['form_build_id'])) {
    unset($form['form_build_id']);
  }
  if (isset($form['form_token'])) {
    unset($form['form_token']);
  }
  if (isset($form['form_id'])) {
    unset($form['form_id']);
  }
  return drupal_render($form);
}

/**
 * Returns HTML for a link to a specific query result page.
 *
 * @param $text
 *   The link text. Also used to figure out the title attribute of the link,
 *   if it is not provided in $attributes['title']; in this case, $text must
 *   be one of the standard pager link text strings that would be generated by
 *   the pager theme functions, such as a number or t('« first').
 * @param $page_new
 *   The first result to display on the linked page.
 * @param $element
 *   An optional integer to distinguish between multiple pagers on one page.
 * @param $parameters
 *   An associative array of query string parameters to append to the pager link.
 * @param $attributes
 *   An associative array of HTML attributes to apply to the pager link.
 * @return
 *   An HTML string that generates the link.
 *
 * @ingroup themeable
 */
function phptemplate_pager_link($text, $page_new, $element, $parameters = array(), $attributes = array()) {
  $page = isset($_GET['page']) ? $_GET['page'] : '';
  if ($new_page = implode(',', pager_load_array($page_new[$element], $element, explode(',', $page)))) {
    $parameters['page'] = $new_page;
  }

  $query = array();
  if (count($parameters)) {
    $query[] = drupal_query_string_encode($parameters, array());
  }
  $querystring = pager_get_querystring();
  if ($querystring != '') {
    $query[] = $querystring;
  }

  // Set each pager link title
  if (!isset($attributes['title'])) {
    static $titles = NULL;
    if (!isset($titles)) {
      $titles = array(
        t('« first') => t('Go to first page'),
        t('‹ previous') => t('Go to previous page'),
        t('next ›') => t('Go to next page'),
        t('last »') => t('Go to last page'),
      );
    }
    if (isset($titles[$text])) {
      $attributes['title'] = $titles[$text];
    }
    else if (is_numeric($text)) {
      $attributes['title'] = t('Go to page @number', array('@number' => $text));
    }
  }

  if (!isset($attributes['class'])) {
    $attributes['class'] = '';
  } 

  $parse_paths = array();
  $path = $_GET['q'];
  $paths = explode('/', $path);

  $ret = l($text, $path, array('attributes' => $attributes, 'query' => count($query) ? implode('&', $query) : NULL));
  //$ret = l($text, $path, array('attributes' => $attributes));
  return $ret;
}

/**
 * Present a node submission form.
 *
 * @ingroup themeable
 */
function theme_khohang_setting($form) {
  global $user;    
  $headers = array(t('Tên kho hàng', array(), 'vi'), t('Nhãn hiển thị', array(), 'vi'), t('Màu sắc', array(), 'vi'), t('Tắt', array(), 'vi'),t('Hà Nội',array(),'vi'));
  $rows = array();
  foreach (element_children($form['khohang_setting']) as $key) {
    $row = array();
    $row[] = '<strong>' . $form['khohang_setting'][$key]['#title'] . '</strong>';
    $row[] = drupal_render($form['khohang_setting'][$key]['label']);
    $row[] = drupal_render($form['khohang_setting'][$key]['color']);
    $row[] = drupal_render($form['khohang_setting'][$key]['disable']);
    $row[] = drupal_render($form['khohang_setting'][$key]['hanoi']);
    $rows[] = $row;
  }
  $output = theme('table', $headers, $rows);
  $output .= drupal_render($form['submit']);
  $output .= '<div class="hide">' . drupal_render($form) . '</div>';  
  return $output;
}